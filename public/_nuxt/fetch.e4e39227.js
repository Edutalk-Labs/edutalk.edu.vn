import{q as o,v as a}from"./entry.62437a4a.js";const s="/get-edutalk-option?template=ecosystem",n="/get-edutalk-option?template=home-page",h="/get-edutalk-option?template=contact",i="/get-news-highlight",r="/get-news-limit",l="/get-event",p="/get-news-by-id",g="/get-event-by-id",w="/get-news",y="/get-edutalk-option?template=peopleinedutalk",u=o("fetch",{state:()=>({ecosystems:{},home_page:{},news_highlight:{},news_normal:{},detail:{},contact:{},events:{},news_update:{},people:{}}),actions:{async fetchEcosystems(){try{const e=a();await $fetch(s,{baseURL:e.public.apiBase}).then(t=>{this.ecosystems=t}).catch(t=>{throw t})}catch(e){console.error(e)}},async fetchHome(){try{const e=a();await $fetch(n,{baseURL:e.public.apiBase}).then(t=>{console.log(t,"home_page"),this.home_page=t}).catch(t=>{throw t})}catch(e){console.log(e,"home_page"),console.error(e)}},async fetchContact(){try{const e=a();await $fetch(h,{baseURL:e.public.apiBase}).then(t=>{this.contact=t}).catch(t=>{throw t})}catch(e){console.error(e)}},async fetchNewsHighlight(){try{const e=a();await $fetch(i,{baseURL:e.public.apiBase}).then(t=>{this.news_highlight=t.data}).catch(t=>{throw t})}catch(e){console.error(e)}},async fetchNewsNormal(){try{const e=a();await $fetch(r,{baseURL:e.public.apiBase}).then(t=>{this.news_normal=t.data}).catch(t=>{throw t})}catch(e){console.error(e)}},async fetchEvents(e){try{const t=a();await $fetch(l,{baseURL:t.public.apiBase,query:e}).then(c=>{this.events=c.data}).catch(c=>{throw c})}catch(t){console.error(t)}},async getNewsById(e){try{this.detail={};const t=a();await $fetch(p,{baseURL:t.public.apiBase,query:e}).then(c=>{this.detail=c.data}).catch(c=>{throw c})}catch(t){console.error(t)}},async getEventById(e){try{this.detail={};const t=a();await $fetch(g,{baseURL:t.public.apiBase,query:e}).then(c=>{this.detail=c.data}).catch(c=>{throw c})}catch(t){console.error(t)}},async getNewUpdate(){try{const e=a();await $fetch(w,{baseURL:e.public.apiBase,query:{limit:10}}).then(t=>{this.news_update=t.data}).catch(t=>{throw t})}catch(e){console.error(e)}},async fetchPeople(){try{const e=a();await $fetch(y,{baseURL:e.public.apiBase}).then(t=>{this.people=t}).catch(t=>{throw t})}catch(e){console.error(e)}}}});export{u};
